{"version":3,"sources":["webpack:///./node_modules/core-js/internals/use-symbol-as-uid.js","webpack:///./node_modules/core-js/internals/native-promise-constructor.js","webpack:///./src/simulations/util/PhysicsSimulation.ts","webpack:///./node_modules/core-js/internals/new-promise-capability.js","webpack:///./node_modules/core-js/modules/es.math.hypot.js","webpack:///./node_modules/core-js/internals/species-constructor.js","webpack:///./node_modules/core-js/internals/native-symbol.js","webpack:///./node_modules/core-js/modules/es.promise.finally.js","webpack:///./src/simulations/util/PhysicsSimulation3D.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/simulations/fire/Particle.ts","webpack:///./src/simulations/fire/constants.ts","webpack:///./src/simulations/fire/Fire.ts","webpack:///./src/simulations/fire/index.ts","webpack:///./src/pages/projects/simulations/fire.tsx","webpack:///./node_modules/core-js/internals/well-known-symbol.js","webpack:///./src/simulations/util/helpers.ts","webpack:///./node_modules/core-js/internals/promise-resolve.js"],"names":["NATIVE_SYMBOL","module","exports","Symbol","sham","iterator","global","Promise","PhysicsSimulation","p5","verbose","startMS","currMS","prevMS","frames","setup","this","millis","calculateTime","fps","Math","floor","console","log","Simulation","aFunction","PromiseCapability","C","resolve","reject","promise","$$resolve","$$reject","undefined","TypeError","f","$","$hypot","hypot","abs","sqrt","target","stat","forced","Infinity","NaN","value1","value2","arg","div","sum","i","aLen","arguments","length","larg","anObject","SPECIES","wellKnownSymbol","O","defaultConstructor","S","constructor","fails","Object","getOwnPropertySymbols","String","IS_PURE","NativePromise","getBuiltIn","speciesConstructor","promiseResolve","redefine","proto","real","prototype","call","then","onFinally","isFunction","x","e","PhysicsSimulation3D","cameraRadius","cameraTarget","y","z","cameraPosition","cameraTheta","is3D","placeCamera","moveCamera","isMousePressed","PI","mouseX","width","cursor","MOVE","HAND","cos","sin","camera","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","Particle","center","color","r","g","b","copy","position","randomPosition","velocity","randomVelocity","remainingLife","randomFromTo","Constructor","protoProps","staticProps","render","strokeWeight","stroke","point","randomDirection","P5","Vector","random3D","add","mult","createVector","normalize","randomSpeed","random","update","deltaT","updatePosition","updateColor","updateLife","computeSpiralForce","fromCenter","sub","centerDirection","gravityForce","spiralForce","Fire","particles","emitCenter","height","simulate","emitParticles","updateParticles","killParticles","background","renderCore","fill","noStroke","translate","sphere","numNewParticles","push","filter","particle","isDead","fire","draw","FirePage","Layout","title","sketch","shared","has","uid","USE_SYMBOL_AS_UID","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","name","min","max","isObject","newPromiseCapability","promiseCapability"],"mappings":"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","file":"component---src-pages-projects-simulations-fire-tsx-db5916b760b2ab4c0583.js","sourcesContent":["var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  /* global Symbol -- safe */\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","import P5 from 'p5';\nimport { Simulation } from './Simulation';\n\nexport class PhysicsSimulation extends Simulation {\n  /** Enable additional console logging. Just average FPS for now. */\n  verbose = false;\n  /** A timestamp of the simulation start time. */\n  startMS = 0;\n  /** A timestamp of the beginning of the current frame. */\n  currMS = 0;\n  /** A timestamp of the beginning of the previous frame. */\n  prevMS = 0;\n  /** The total number of frames that have been rendered. */\n  frames = 0;\n\n  /** Pass the verbose flag to show the average FPS */\n  constructor(p5: P5, verbose?: boolean) {\n    super(p5);\n    this.verbose = verbose ?? false;\n  }\n\n  /** Call during p5.setup to create the canvas and initialize the timing. */\n  setup() {\n    // create the canvas\n    super.setup();\n\n    // Initialize the timing\n    this.currMS = this.p5.millis();\n    this.startMS = this.currMS;\n    this.prevMS = this.currMS;\n  }\n\n  /** Determine how many seconds have passed since the previous frame. */\n  calculateTime() {\n    this.frames++;\n    this.prevMS = this.currMS;\n    this.currMS = this.p5.millis();\n\n    if (this.verbose) {\n      const fps = Math.floor((this.frames / (this.currMS - this.startMS)) * 1000);\n      console.log(`Running at ${fps} FPS`);\n    }\n\n    return (this.currMS - this.prevMS) / 1000;\n  }\n}\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var $ = require('../internals/export');\n\nvar $hypot = Math.hypot;\nvar abs = Math.abs;\nvar sqrt = Math.sqrt;\n\n// Chrome 77 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;\n\n// `Math.hypot` method\n// https://tc39.es/ecma262/#sec-math.hypot\n$({ target: 'Math', stat: true, forced: BUGGY }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  hypot: function hypot(value1, value2) {\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\n  }\n});\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  /* global Symbol -- required for testing */\n  return !String(Symbol());\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// patch native Promise.prototype for native async functions\nif (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n}\n","import P5 from 'p5';\nimport { PhysicsSimulation } from './PhysicsSimulation';\nimport { Coordinates3D } from './types';\n\nexport class PhysicsSimulation3D extends PhysicsSimulation {\n  /** The coordinates that the camera points towards. */\n  cameraTarget: Coordinates3D = { x: 0, y: 0, z: 0 };\n  /** The camera's location */\n  cameraPosition: Coordinates3D = { x: 0, y: 0, z: 0 };\n  /** The distance from the camera to the it's target */\n  cameraRadius: number;\n  /** The camera's angle around the Y axis. */\n  cameraTheta = 0;\n\n  constructor(p5: P5, verbose?: boolean, cameraRadius = 150) {\n    super(p5, verbose);\n    this.cameraRadius = cameraRadius;\n    this.is3D = true;\n  }\n\n  /** Initialize timing and camera */\n  setup() {\n    // init timing\n    super.setup();\n\n    // init camera\n    this.placeCamera();\n  }\n\n  moveCamera() {\n    if (this.isMousePressed()) {\n      this.cameraTheta = (2 * this.p5.PI * (this.p5.mouseX - this.p5.width / 2)) / this.p5.width;\n      this.p5.cursor(this.p5.MOVE);\n    } else {\n      this.p5.cursor(this.p5.HAND);\n    }\n\n    this.placeCamera();\n  }\n\n  placeCamera() {\n    this.cameraPosition = {\n      x: this.cameraTarget.x + this.cameraRadius * this.p5.cos(this.cameraTheta),\n      y: this.cameraTarget.y - 100,\n      z: this.cameraTarget.z + this.cameraRadius * this.p5.sin(this.cameraTheta),\n    };\n\n    this.p5.camera(\n      this.cameraPosition.x,\n      this.cameraPosition.y,\n      this.cameraPosition.z,\n      this.cameraTarget.x,\n      this.cameraTarget.y,\n      this.cameraTarget.z,\n      0,\n      1,\n      0,\n    );\n  }\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import P5 from 'p5';\nimport { randomFromTo } from '../util/helpers';\nimport {\n  PARTICLE_MIN_LIFE,\n  PARTICLE_MAX_LIFE,\n  PARTICLE_DIAMETER,\n  EMIT_RADIUS,\n  PARTICLE_SPEED,\n  COLOR_SPEED,\n  GRAVITY,\n  SPIRAL_STRENGTH,\n} from './constants';\n\ninterface Color {\n  r: number;\n  g: number;\n  b: number;\n}\n\nexport class Particle {\n  p5: P5;\n  center: P5.Vector;\n  position: P5.Vector;\n  velocity: P5.Vector;\n  remainingLife: number;\n  color: Color = {\n    r: 255,\n    g: 255,\n    b: 255,\n  };\n\n  constructor(p5: P5, center: P5.Vector) {\n    this.p5 = p5;\n    this.center = center.copy();\n    this.position = this.randomPosition();\n    this.velocity = this.randomVelocity();\n    this.remainingLife = randomFromTo(PARTICLE_MIN_LIFE, PARTICLE_MAX_LIFE);\n  }\n\n  render() {\n    this.p5.strokeWeight(PARTICLE_DIAMETER * this.remainingLife);\n    this.p5.stroke(this.color.r, this.color.g, this.color.b);\n    this.p5.point(this.position.x, this.position.y, this.position.z);\n  }\n\n  /** Choose a random position on the surface of a sphere */\n  randomPosition(): P5.Vector {\n    const randomDirection = P5.Vector.random3D();\n\n    return P5.Vector.add(this.center, randomDirection.mult(EMIT_RADIUS));\n  }\n\n  randomVelocity(): P5.Vector {\n    const randomDirection = this.p5\n      .createVector(\n        randomFromTo(-1, 1),\n        randomFromTo(-1, 0), // only let particles move up\n        randomFromTo(-1, 1),\n      )\n      .normalize();\n\n    const randomSpeed = Math.random();\n\n    return this.p5.createVector(\n      (randomDirection.x * randomSpeed * PARTICLE_SPEED) / 4,\n      randomDirection.y * randomSpeed * PARTICLE_SPEED, // particles should move faster in the y direction\n      (randomDirection.z * randomSpeed * PARTICLE_SPEED) / 4,\n    );\n  }\n\n  update(deltaT: number) {\n    this.updatePosition(deltaT);\n    this.updateColor(deltaT);\n    this.updateLife(deltaT);\n  }\n\n  computeSpiralForce() {\n    const fromCenter = P5.Vector.sub(this.position, this.center);\n    const centerDirection = this.p5.createVector(fromCenter.x, 0, fromCenter.z).normalize();\n\n    // A handy trick to get a perpendicular vector\n    const spiralDirection = this.p5.createVector(fromCenter.z, 0, -fromCenter.x).normalize();\n\n    return spiralDirection.sub(centerDirection.mult(2)).mult(SPIRAL_STRENGTH);\n  }\n\n  get isDead() {\n    return this.remainingLife <= 0;\n  }\n\n  updateLife(deltaT: number) {\n    this.remainingLife -= deltaT;\n  }\n\n  updatePosition(deltaT: number) {\n    // compute forces\n    const gravityForce = this.p5.createVector(0, -1, 0).mult(GRAVITY * deltaT);\n    const spiralForce = this.computeSpiralForce();\n\n    // update velocity\n    this.velocity.add(gravityForce).add(spiralForce.mult(deltaT));\n\n    // update position\n    this.position.add(P5.Vector.mult(this.velocity, deltaT));\n  }\n\n  updateColor(deltaT: number) {\n    this.color.g = Math.floor(this.color.g - COLOR_SPEED * deltaT);\n    this.color.b = Math.floor(this.color.b - 10 * COLOR_SPEED * deltaT);\n  }\n}\n","export const EMIT_RADIUS = 10;\n\n/** Rate at which particle color changes */\nexport const COLOR_SPEED = 10;\n\n// forces\nexport const GRAVITY = 1;\nexport const SPIRAL_STRENGTH = 10;\n\n// particles\nexport const PARTICLES_PER_SECOND = 200;\nexport const PARTICLE_SPEED = 40;\nexport const PARTICLE_DIAMETER = 6;\nexport const PARTICLE_MIN_LIFE = 0.5;\nexport const PARTICLE_MAX_LIFE = 4;\n","import { PhysicsSimulation3D } from '../util/PhysicsSimulation3D';\nimport { Particle } from './Particle';\nimport { EMIT_RADIUS, PARTICLES_PER_SECOND } from './constants';\nimport P5 from 'p5';\n\nexport class Fire extends PhysicsSimulation3D {\n  particles: Particle[] = [];\n  emitCenter!: P5.Vector;\n\n  setup() {\n    super.setup();\n\n    this.emitCenter = this.p5.createVector(\n      this.cameraTarget.x,\n      this.cameraTarget.y + this.p5.height / 8,\n      this.cameraTarget.z,\n    );\n  }\n\n  simulate() {\n    const deltaT = this.calculateTime();\n    if (this.verbose) {\n      console.log(`${this.particles.length} particles`);\n    }\n\n    // emit new particles\n    this.emitParticles(deltaT);\n\n    // update existing particles\n    this.updateParticles(deltaT);\n\n    // remove dead particles\n    this.killParticles();\n  }\n\n  render() {\n    this.p5.background(0);\n    this.renderCore();\n\n    for (let i = 0; i < this.particles.length; i++) {\n      this.particles[i].render();\n    }\n  }\n\n  renderCore() {\n    this.p5.fill(255);\n    this.p5.noStroke();\n    this.p5.translate(this.emitCenter);\n    this.p5.sphere(EMIT_RADIUS);\n    this.p5.translate(P5.Vector.mult(this.emitCenter, -1));\n  }\n\n  emitParticles(deltaT: number) {\n    const numNewParticles = Math.floor(PARTICLES_PER_SECOND * deltaT);\n\n    for (let i = 0; i < numNewParticles; i++) {\n      this.particles.push(new Particle(this.p5, this.emitCenter));\n    }\n  }\n\n  updateParticles(deltaT: number) {\n    for (let i = 0; i < this.particles.length; i++) {\n      this.particles[i].update(deltaT);\n    }\n  }\n\n  killParticles() {\n    this.particles = this.particles.filter((particle) => !particle.isDead);\n  }\n}\n","import P5 from 'p5';\nimport { Fire } from './Fire';\n\nexport const fire = (p5: P5) => {\n  const fire = new Fire(p5, true);\n\n  p5.setup = function () {\n    fire.setup();\n  };\n\n  p5.draw = function () {\n    fire.moveCamera();\n    fire.simulate();\n    fire.render();\n  };\n};\n","import React from 'react';\nimport { PageProps } from 'gatsby';\nimport Layout from '../../../components/Layout';\nimport { Simulation } from '../../../components/Simulation';\nimport { fire } from '../../../simulations/fire';\n\nconst FirePage: React.FC<PageProps> = () => {\n  return (\n    <Layout title=\"Fire Particle System\">\n      <h1>Fire Particle System</h1>\n      <Simulation sketch={fire} />\n    </Layout>\n  );\n};\n\nexport default FirePage;\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","export const randomFromTo = (min: number, max: number) => (max - min) * Math.random() + min;\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n"],"sourceRoot":""}