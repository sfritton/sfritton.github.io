(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"3Pna":function(t,e,i){"use strict";i.r(e);var n=i("q1tI"),s=i.n(n),h=i("VXBa"),a=i("u7b8"),r=i("KQm4"),o=i("dI71"),c=i("zRY8"),l=function(t,e){return t+(e-t)*(.5+Object(c.a)(-.25,.25))},u=function(){function t(t,e,i,n,s){this.x1=0,this.x2=0,this.y1=0,this.y2=0,this.exits=[],this.level=0,this.maxLevel=0,this.onPath=!1,this.hasKey=!1,this.isDungeonEntrance=!1,this.isDungeonExit=!1,this.p5=t,this.x1=e,this.x2=i,this.y1=n,this.y2=s}var e=t.prototype;return e.render=function(){this.p5.strokeWeight(1.5),this.p5.stroke("#00ccff"),this.isDungeonEntrance?this.p5.fill("#0066aa"):this.isDungeonExit?this.p5.fill("#002244"):this.p5.fill("#004466"),this.p5.beginShape(),this.p5.vertex(this.x1,this.y1),this.p5.vertex(this.x2,this.y1),this.p5.vertex(this.x2,this.y2),this.p5.vertex(this.x1,this.y2),this.p5.vertex(this.x1,this.y1),this.p5.endShape(),this.renderText(),this.exits.forEach((function(t){return t.render()}))},e.renderText=function(){this.p5.noStroke(),this.hasKey&&(this.p5.fill("#00ccff"),this.p5.textSize(19),this.p5.textAlign(this.p5.CENTER,this.p5.CENTER),this.hasKey?(this.p5.translate(this.x1+(this.x2-this.x1)/2,this.y1+(this.y2-this.y1)/2),this.p5.rotate(3*this.p5.PI/4),this.p5.text("F",1,-5),this.p5.text("O",-1,7),this.p5.resetMatrix()):this.p5.text(this.level,this.x1+(this.x2-this.x1)/2,this.y1+(this.y2-this.y1)/2))},e.isNeighbor=function(t){return this.y1===t.y2+8&&t.x2-this.x1>48&&this.x2-t.x1>48?"north":this.x2===t.x1-8&&t.y2-this.y1>48&&this.y2-t.y1>48?"east":this.y2===t.y1-8&&t.x2-this.x1>48&&this.x2-t.x1>48?"south":this.x1===t.x2+8&&t.y2-this.y1>48&&this.y2-t.y1>48?"west":void 0},e.findExits=function(t){var e=this;return 0===t.length?this.level:(t.forEach((function(t){if(!(!e.isNeighbor(t)||t.entrance||Math.random()>.85)){var i=new d(e.p5,e,t);e.exits.push(i),t.entrance=i,t.level=e.level+1}})),this.maxLevel=this.level,this.exits.forEach((function(i){var n=i.to.findExits(t);n>e.maxLevel&&(e.maxLevel=n)})),this.maxLevel)},e.findDungeonExit=function(){if(this.isDungeonEntrance){var t=this.findMaxLevelDescendent();return t.isDungeonExit=!0,t}},e.findMaxLevelDescendent=function(){if(0===this.exits.length)return this;var t=this.exits[0].to;return this.exits.forEach((function(e){var i=e.to;i.maxLevel>t.maxLevel&&(t=i)})),t.findMaxLevelDescendent()},e.findPath=function(){if(this.isDungeonExit)for(var t=this.entrance;t;)t.onPath=!0,t.from.onPath=!0,t=t.from.entrance},e.findNonPathExit=function(){var t;return this.exits.forEach((function(e){e.onPath||(!t||e.to.maxLevel>t.to.maxLevel)&&(t=e)})),t},e.findPathExit=function(){return this.exits.find((function(t){return t.onPath}))},e.placeKey=function(){var t;if(!this.isDungeonExit)return!1;for(var e=this,i=Math.floor(Object(c.a)(1,this.level));i>0&&null!==(n=e)&&void 0!==n&&n.entrance;i--){var n,s,h;e=null===(s=e)||void 0===s||null===(h=s.entrance)||void 0===h?void 0:h.from}for(var a=void 0;!a;){var r;if(!(a=null===(r=e)||void 0===r?void 0:r.findNonPathExit())){var o;if(null===(o=e)||void 0===o||!o.entrance)return!1;e=e.entrance.from}}var l=null===(t=e)||void 0===t?void 0:t.findPathExit();return!!l&&(l.isLocked=!0,a.to.findMaxLevelDescendent().hasKey=!0,!0)},t}(),d=function(){function t(t,e,i){switch(this.onPath=!1,this.isLocked=!1,this.isVertical=!1,this.p5=t,this.from=e,this.to=i,e.isNeighbor(i)){case"north":this.isVertical=!1,this.y1=e.y1-8,this.y2=e.y1;break;case"east":this.isVertical=!0,this.x1=e.x2,this.x2=e.x2+8;break;case"south":this.isVertical=!1,this.y1=e.y2,this.y2=e.y2+8;break;case"west":this.isVertical=!0,this.x1=e.x1-8,this.x2=e.x1}if(this.isVertical){var n=Math.max(e.y1,i.y1),s=Math.min(e.y2,i.y2),h=8*Math.floor(Object(c.a)(n+12+8,s-12-8)/8);this.y1=h-12,this.y2=h+12}else{var a=Math.max(e.x1,i.x1),r=Math.min(e.x2,i.x2),o=8*Math.floor(Object(c.a)(a+12+8,r-12-8)/8);this.x1=o-12,this.x2=o+12}}return t.prototype.render=function(){if(this.to.render(),this.p5.noStroke(),this.p5.fill("#004466"),this.isVertical?(this.p5.beginShape(),this.p5.vertex(this.x1-2,this.y1),this.p5.vertex(this.x2+2,this.y1),this.p5.vertex(this.x2+2,this.y2),this.p5.vertex(this.x1-2,this.y2),this.p5.endShape()):(this.p5.beginShape(),this.p5.vertex(this.x1,this.y1-2),this.p5.vertex(this.x2,this.y1-2),this.p5.vertex(this.x2,this.y2+2),this.p5.vertex(this.x1,this.y2+2),this.p5.endShape()),this.p5.stroke("#00ccff"),this.p5.strokeWeight(1.5),this.isVertical?(this.p5.line(this.x1,this.y1,this.x2,this.y1),this.p5.line(this.x1,this.y2,this.x2,this.y2)):(this.p5.line(this.x1,this.y1,this.x1,this.y2),this.p5.line(this.x2,this.y1,this.x2,this.y2)),this.isLocked)if(this.p5.stroke("#00ccff"),this.p5.strokeWeight(4),this.isVertical){var t=(this.x1+this.x2)/2;this.p5.line(t,this.y1+2,t,this.y2-2)}else{var e=(this.y1+this.y2)/2;this.p5.line(this.x1+2,e,this.x2-2,e)}},t}(),x=function(t){function e(){for(var e,i=arguments.length,n=new Array(i),s=0;s<i;s++)n[s]=arguments[s];return(e=t.call.apply(t,[this].concat(n))||this).maxLevel=0,e}Object(o.a)(e,t);var i=e.prototype;return i.generateDungeon=function(){var t,e=this.divide(5);this.dungeonEntrance=e[0],this.dungeonEntrance.isDungeonEntrance=!0,this.maxLevel=this.dungeonEntrance.findExits(e.slice(1)),this.dungeonExit=this.dungeonEntrance.findDungeonExit(),null===(t=this.dungeonExit)||void 0===t||t.findPath();for(var i=Math.floor(Object(c.a)(1,4)),n=0;n<i;n++){var s;null===(s=this.dungeonExit)||void 0===s||s.placeKey()}},i.renderDungeon=function(){var t;this.p5.noStroke(),this.p5.background(0),null===(t=this.dungeonEntrance)||void 0===t||t.render()},i.divide=function(t,e,i){if(!e||!i)return this.divide(t,new u(this.p5,8,this.p5.width-8,8,this.p5.height-8),[]);if(0===t)return[].concat(Object(r.a)(i),[e]);var n=t%2==0;if(Math.random()>.85?n:!n){var s=l(e.x1,e.x2);return e.x2-(s+8)<48||s-e.x1<48?this.divide(t-1,e,i):[].concat(Object(r.a)(this.divide(t-1,new u(this.p5,e.x1,s,e.y1,e.y2),i)),Object(r.a)(this.divide(t-1,new u(this.p5,s+8,e.x2,e.y1,e.y2),i)))}var h=l(e.y1,e.y2);return e.y2-(h+8)<48||h-e.y1<48?this.divide(t-1,e,i):[].concat(Object(r.a)(this.divide(t-1,new u(this.p5,e.x1,e.x2,e.y1,h),i)),Object(r.a)(this.divide(t-1,new u(this.p5,e.x1,e.x2,h+8,e.y2),i)))},e}(i("mCOQ").a),f=function(t){return function(e){var i,n=new x(e);e.setup=function(){n.setup(),n.generateDungeon(),n.renderDungeon()},null===(i=t.current)||void 0===i||i.addEventListener("click",(function(t){t.preventDefault(),n.generateDungeon(),n.renderDungeon()}))}},p=i("ky/i"),v=i.n(p),g=i("zLVn"),m=i("eqM9"),y=i.n(m),E=Object(n.forwardRef)((function(t,e){var i=t.children,n=Object(g.a)(t,["children"]);return s.a.createElement("button",Object.assign({ref:e,type:"button"},n,{className:y.a.button}),i)}));e.default=function(){var t=Object(n.useRef)(null);return s.a.createElement(h.a,{title:"Dungeon Generator"},s.a.createElement("h1",null,"Dungeon Generator"),s.a.createElement("div",null,"A dungeon created using procedural generation. Start from the light blue room and try to navigate to the dark blue room. If a locked door blocks your path, find a key to open it."),s.a.createElement("div",{className:v.a.legend},s.a.createElement("div",null,s.a.createElement("span",{className:v.a.swatch,style:{background:"#0066aa"}})," Entrance"),s.a.createElement("div",null,s.a.createElement("span",{className:v.a.swatch,style:{background:"#002244"}})," Exit"),s.a.createElement("div",null,s.a.createElement("img",{className:v.a.swatch,src:"/images/dungeon_lock.png"})," Locked door"),s.a.createElement("div",null,s.a.createElement("img",{className:v.a.swatch,src:"/images/dungeon_key.png"})," Key")),s.a.createElement("h2",null,"Demo"),s.a.createElement(a.a,{sketch:f(t)}),s.a.createElement(E,{ref:t},"Generate a new dungeon"),s.a.createElement("h2",null,"How it works"),s.a.createElement("h3",null,"Generating rooms"),"The algorithm starts with a single large room. It chooses a random point and adds a wall to split the room into two new rooms. It repeats this process with each room until the dungeon is sufficiently complex.",s.a.createElement("div",{className:v.a.rooms},s.a.createElement("img",{src:"/images/dungeon_0.png"}),s.a.createElement("img",{src:"/images/dungeon_1.png"}),s.a.createElement("img",{src:"/images/dungeon_2.png"}),s.a.createElement("img",{src:"/images/dungeon_3.png"})),s.a.createElement("h3",null,"Adding doors"),"Next, the algorithm chooses a room to be the entrance. It creates a door to each neighbor at a random point along the shared wall. For each newly connected room, the process is repeated. The result is a tree structure of rooms starting from the dungeon entrance.",s.a.createElement("h3",null,"Choosing an exit"),"The dungeon exit is chosen to be the room at the greatest depth, that is the furthest number of doors from the dungeon entrance. There is only one path from the entrance to the exit.",s.a.createElement("h3",null,"Placing keys & locks"),"The dungeon will have between one and four locked doors, each along the direct path from the entrance to the exit. For each locked door, a key is placed in a room further up the tree.")}},eqM9:function(t,e,i){t.exports={button:"button-module--button--1AP7e"}},"ky/i":function(t,e,i){t.exports={legend:"dungeon-module--legend--2XZJ5",swatch:"dungeon-module--swatch--3B54k",rooms:"dungeon-module--rooms--2XZ_V"}},zRY8:function(t,e,i){"use strict";i.d(e,"a",(function(){return n}));var n=function(t,e){return(e-t)*Math.random()+t}}}]);
//# sourceMappingURL=component---src-pages-projects-simulations-procedural-dungeon-tsx-fea58b83cfde8f2feb10.js.map