{"version":3,"sources":["webpack:///./src/simulations/bouncing-ball/BouncingBall.ts","webpack:///./src/simulations/bouncing-ball/constants.ts","webpack:///./src/simulations/bouncing-ball/index.ts","webpack:///./src/pages/projects/simulations/bouncing-ball.tsx"],"names":["BouncingBall","p5","position","x","y","velocity","startMS","currMS","prevMS","frames","this","setup","width","height","millis","simulateFrame","deltaT","calculateTime","bounce","updatePosition","handleUserInput","render","noStroke","background","fill","ellipse","RADIUS","cursor","HAND","mouseIsPressed","mouseButton","LEFT","mouseX","mouseY","MOVE","pmouseX","pmouseY","bouncingBall","ball","createCanvas","canvasDimensions","draw","BouncingBallPage","Layout","title","Simulation","sketch","style","marginTop"],"mappings":"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","file":"component---src-pages-projects-simulations-bouncing-ball-tsx-acd1457900d0bafb8c1e.js","sourcesContent":["import P5 from 'p5';\nimport { COR, COF, GRAVITY, RADIUS } from './constants';\nimport { Coordinates } from './types';\n\nexport class BouncingBall {\n  position: Coordinates = { x: 0, y: 0 };\n  velocity: Coordinates = { x: 0, y: 0 };\n  startMS: number = 0;\n  currMS: number = 0;\n  prevMS: number = 0;\n  frames: number = 0;\n  p5: P5;\n\n  constructor(p5: P5) {\n    this.p5 = p5;\n  }\n\n  setup() {\n    // Place the ball in the center of the canvas\n    this.position = {\n      x: this.p5.width / 2,\n      y: this.p5.height / 2,\n    };\n\n    // Initialize the timing\n    this.currMS = this.p5.millis();\n    this.startMS = this.currMS;\n    this.prevMS = this.currMS;\n  }\n\n  simulateFrame() {\n    this.frames++;\n    const deltaT = this.calculateTime();\n    this.bounce();\n    this.updatePosition(deltaT);\n    this.handleUserInput(deltaT);\n  }\n\n  render() {\n    this.p5.noStroke();\n    this.p5.background('#008060');\n    this.p5.fill('#65ffda');\n    this.p5.ellipse(this.position.x, this.position.y, RADIUS * 2, RADIUS * 2);\n  }\n\n  /** Determine how many seconds have passed since the previous frame. */\n  calculateTime() {\n    this.prevMS = this.currMS;\n    this.currMS = this.p5.millis();\n\n    return (this.currMS - this.prevMS) / 1000;\n  }\n\n  /** If the ball is too close to an edge, reset it and reverse its velocity. */\n  bounce() {\n    // floor\n    if (this.position.y + RADIUS >= this.p5.height && this.velocity.y >= 0) {\n      this.position.y = this.p5.height - RADIUS;\n      this.velocity.x *= COF;\n      this.velocity.y *= -COR;\n    }\n\n    // ceiling\n    if (this.position.y - RADIUS <= 0 && this.velocity.y <= 0) {\n      this.position.y = RADIUS;\n      this.velocity.x *= COF;\n      this.velocity.y *= -COR;\n    }\n\n    // right wall\n    if (this.position.x + RADIUS >= this.p5.width && this.velocity.x >= 0) {\n      this.position.x = this.p5.width - RADIUS;\n      this.velocity.x *= -COR;\n      this.velocity.y *= COF;\n    }\n\n    // left wall\n    if (this.position.x - RADIUS <= 0 && this.velocity.x <= 0) {\n      this.position.x = RADIUS;\n      this.velocity.x *= -COR;\n      this.velocity.y *= COF;\n    }\n  }\n\n  /** Moves the ball based on its velocity. */\n  updatePosition(deltaT: number) {\n    this.velocity.y += GRAVITY * deltaT;\n\n    this.position.x += this.velocity.x * deltaT;\n    this.position.y += this.velocity.y * deltaT;\n  }\n\n  /** Let the user pick up and throw the ball */\n  handleUserInput(deltaT: number) {\n    this.p5.cursor(this.p5.HAND);\n\n    // do nothing if the mouse is not pressed\n    if (!this.p5.mouseIsPressed || this.p5.mouseButton !== this.p5.LEFT) return;\n\n    // do nothing if the mouse is outside the canvas\n    if (\n      this.p5.mouseX < 0 ||\n      this.p5.mouseX > this.p5.width ||\n      this.p5.mouseY < 0 ||\n      this.p5.mouseY > this.p5.height\n    )\n      return;\n\n    this.p5.cursor(this.p5.MOVE);\n    this.position.x = this.p5.mouseX;\n    this.position.y = this.p5.mouseY;\n\n    this.velocity.x = (this.p5.mouseX - this.p5.pmouseX) / deltaT;\n    this.velocity.y = (this.p5.mouseY - this.p5.pmouseY) / deltaT;\n  }\n}\n","/** The radius of the ball. */\nexport const RADIUS = 20;\n/** The force of gravity. Since simulations don't use real units, this is set to whatever \"feels\" right. */\nexport const GRAVITY = 800;\n/** **Coefficient of Restitution */\nexport const COR = 0.8;\n/** **Coefficient of Friction */\nexport const COF = 0.98;\n","import P5 from 'p5';\nimport { canvasDimensions } from '../util';\nimport { BouncingBall } from './BouncingBall';\n\nexport const bouncingBall = (p5: P5) => {\n  const ball = new BouncingBall(p5);\n\n  p5.setup = function () {\n    p5.createCanvas(...canvasDimensions());\n\n    // initialize the ball\n    ball.setup();\n  };\n\n  p5.draw = function () {\n    ball.simulateFrame();\n    ball.render();\n  };\n};\n","import React from 'react';\nimport { PageProps } from 'gatsby';\nimport Layout from '../../../components/Layout';\nimport { Simulation } from '../../../components/Simulation';\nimport { bouncingBall } from '../../../simulations/bouncing-ball';\n\nconst BouncingBallPage: React.FC<PageProps> = () => {\n  return (\n    <Layout title=\"Bouncing Ball\">\n      <h1>Bouncing Ball</h1>\n      <Simulation sketch={bouncingBall} />\n      <div>A simple physics simulation. Try throwing the ball by clicking and dragging it.</div>\n      <div style={{ marginTop: 'var(--space-md)' }}>\n        <b>Note:</b> This doesn't work the best on touchscreens.\n      </div>\n    </Layout>\n  );\n};\n\nexport default BouncingBallPage;\n"],"sourceRoot":""}